name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test and Build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run tests
      run: mvn clean test
      
    - name: Build application
      run: mvn clean compile javafx:jlink
      
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: target/surefire-reports/
        
  build-and-package:
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build and package
      run: mvn clean package javafx:jlink
      
    - name: Create distribution (Unix)
      if: runner.os != 'Windows'
      run: |
        cd target
        tar -czf ../demoFXWellet-${{ runner.os }}.tar.gz *
        
    - name: Create distribution (Windows)
      if: runner.os == 'Windows'
      run: |
        cd target
        Compress-Archive -Path * -DestinationPath ../demoFXWellet-Windows.zip
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: demoFXWellet-${{ runner.os }}
        path: |
          demoFXWellet-*.tar.gz
          demoFXWellet-*.zip
        retention-days: 30
        
  release:
    runs-on: ubuntu-latest
    needs: [test, build-and-package]
    if: github.event_name == 'release'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          demoFXWellet-*/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
  security-scan:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Run dependency check
      run: mvn org.owasp:dependency-check-maven:check
      
    - name: Upload security scan results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-scan-results
        path: target/dependency-check-report.html
